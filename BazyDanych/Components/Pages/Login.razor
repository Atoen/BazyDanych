@page "/Login"
@using BazyDanych.Components.Layout
@using BazyDanych.Data.Models
@using BazyDanych.Services

@layout EmptyLayout

<div class="background">
    <div class="menu">
        <div class="title">Zarządzanie barem kinowym</div>
        <div class="form">
            <StatusMessage Data="@_statusMessageData" />
            <EditForm Model="Credentials" OnValidSubmit="FormCallback" FormName="login">
                <DataAnnotationsValidator />
                
                <p>
                    <InputText @bind-Value="Credentials.Username" placeholder="Login" class="form-control" />
                </p>
                <p>
                    <InputText @bind-Value="Credentials.Password" placeholder="Hasło" type="password" class="form-control" />
                </p>
                
                <ValidationSummary />
                
                <p>
                    <Button Color="ButtonColor.Primary" Type="ButtonType.Submit">Zaloguj się</Button>
                </p>
                
            </EditForm>
        </div>
    </div>
</div>

@inject UserService UserService
@inject RedirectManager RedirectManager
@inject ILogger<Login> Logger

@code {
    private StatusMessageData? _statusMessageData;
    
    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    [SupplyParameterFromForm]
    private UserCredentials Credentials { get; set; } = new();
    
    private async Task FormCallback()
    {
        var result = await UserService.LoginAsync(Credentials);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else
        {
            _statusMessageData = new StatusMessageData("Błędne dane logowania.", StatusMessageType.Error);
        }
    }

    protected override void OnInitialized()
    {
        if (UserService.IsAuthenticated)
        {
            UserService.Logout();
        }
    }

}